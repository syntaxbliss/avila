# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type PaginationInfo {
  count: Int!
  pageNumber: Int!
  pageSize: Int!
}

type Supplier {
  id: ID!
  name: String!
  address: String
  email: String
  phone: String
  contact: String
  materials: [Material!]!
}

type PaginatedSuppliers {
  items: [Supplier!]!
  paginationInfo: PaginationInfo!
}

type Material {
  id: ID!
  name: String!
  code: String!
  measureUnit: MeasureUnit!
  currentQuantity: Float
  alertQuantity: Float
  suppliers: [Supplier!]!
  unitPrice: Float
}

enum MeasureUnit {
  GR
  KG
  TN
  LT
  MT
  UNIT
}

type PaginatedMaterials {
  items: [Material!]!
  paginationInfo: PaginationInfo!
}

type PartMaterial {
  id: ID!
  material: Material!
  quantity: Float!
}

type Part {
  id: ID!
  name: String!
  code: String!
  materials: [PartMaterial!]!
}

type PaginatedParts {
  items: [Part!]!
  paginationInfo: PaginationInfo!
}

type MachineElement {
  id: ID!
  element: MachineElementElementUnion!
  quantity: Float!
}

union MachineElementElementUnion = Material | Part

type Machine {
  id: ID!
  name: String!
  code: String!
  elements: [MachineElement!]!
}

type PaginatedMachines {
  items: [Machine!]!
  paginationInfo: PaginationInfo!
}

type PurchaseOrderMaterial {
  material: Material!
  quantity: Float!
  unitPrice: Float!
}

type PurchaseOrderPayment {
  id: ID!
  method: PaymentMethod!
  amount: Float!
  paidAt: DateTime!
  notes: String
}

enum PaymentMethod {
  BANK_TRANSFER
  CASH
  CHECK
  CURRENT_ACCOUNT
  E_CHECK
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type PurchaseOrder {
  id: ID!
  orderNumber: Int!
  emitter: String!
  deliveryLocation: String
  conditions: String
  orderedAt: DateTime!
  deliveredAt: DateTime
  deliveryNote: String
  totalAmount: Float!
  paidAmount: Float!
  supplier: Supplier!
  materials: [PurchaseOrderMaterial!]!
  payments: [PurchaseOrderPayment!]
}

type PaginatedPurchaseOrders {
  items: [PurchaseOrder!]!
  paginationInfo: PaginationInfo!
}

type RequestForQuotationMaterial {
  material: Material!
  quantity: Float!
  unitPrice: Float
}

type RequestForQuotation {
  id: ID!
  orderedAt: DateTime!
  supplier: Supplier!
  status: RequestForQuotationStatus!
  materials: [RequestForQuotationMaterial!]!
  paymentMethod: PaymentMethod!
  hasAssociatedPurchaseOrder: Boolean!
}

enum RequestForQuotationStatus {
  ANSWERED
  UNANSWERED
}

type PaginatedRequestsForQuotation {
  items: [RequestForQuotation!]!
  paginationInfo: PaginationInfo!
}

type Query {
  machines(searchParams: SearchMachineInput, pagination: PaginationInput): PaginatedMachines!
  machine(machineId: ID!): Machine!
  materials(searchParams: SearchMaterialInput, pagination: PaginationInput): PaginatedMaterials!
  material(materialId: ID!): Material!
  parts(searchParams: SearchPartInput, pagination: PaginationInput): PaginatedParts!
  part(partId: ID!): Part!
  purchaseOrders(searchParams: SearchPurchaseOrderInput, pagination: PaginationInput): PaginatedPurchaseOrders!
  purchaseOrder(purchaseOrderId: ID!): PurchaseOrder!
  requestsForQuotation(searchParams: SearchRequestForQuotationInput, pagination: PaginationInput): PaginatedRequestsForQuotation!
  requestForQuotation(requestForQuotationId: ID!): RequestForQuotation!
  requestsForQuotationEligibleForPurchaseOrders: [RequestForQuotation!]!
  suppliers(searchParams: SearchSupplierInput, pagination: PaginationInput): PaginatedSuppliers!
  supplier(supplierId: ID!): Supplier!
}

input SearchMachineInput {
  name: String
  code: String
  sortField: SearchMachineQuerySortField
  sortOrder: QuerySortOrder
}

enum SearchMachineQuerySortField {
  CODE
  NAME
}

enum QuerySortOrder {
  ASC
  DESC
}

input PaginationInput {
  pageNumber: Int!
  pageSize: Int!
}

input SearchMaterialInput {
  name: String
  code: String
  lowQuantity: Boolean
  sortField: SearchMaterialQuerySortField
  sortOrder: QuerySortOrder
}

enum SearchMaterialQuerySortField {
  CODE
  NAME
}

input SearchPartInput {
  name: String
  code: String
  sortField: SearchPartQuerySortField
  sortOrder: QuerySortOrder
}

enum SearchPartQuerySortField {
  CODE
  NAME
}

input SearchPurchaseOrderInput {
  orderNumber: Int
  orderedAtFrom: DateTime
  orderedAtTo: DateTime
  supplierId: ID
  paymentStatus: SearchPurchaseOrderPaymentStatus
  deliveryStatus: SearchPurchaseOrderDeliveryStatus
  sortField: SearchPurchaseOrderQuerySortField
  sortOrder: QuerySortOrder
}

enum SearchPurchaseOrderPaymentStatus {
  ALL
  PAID
  UNPAID
}

enum SearchPurchaseOrderDeliveryStatus {
  ALL
  DELIVERED
  UNDELIVERED
}

enum SearchPurchaseOrderQuerySortField {
  ORDERED_AT
  DELIVERED_AT
}

input SearchRequestForQuotationInput {
  orderedAtFrom: DateTime
  orderedAtTo: DateTime
  supplierId: ID
  status: SearchRequestForQuotationStatus
  sortOrder: QuerySortOrder
}

enum SearchRequestForQuotationStatus {
  ALL
  ANSWERED
  UNANSWERED
}

input SearchSupplierInput {
  name: String
  sortOrder: QuerySortOrder
}

type Mutation {
  createMachine(input: SaveMachineInput!): Machine!
  updateMachine(machineId: ID!, input: SaveMachineInput!): Machine!
  deleteMachine(machineId: ID!): Boolean!
  createMaterial(input: SaveMaterialInput!): Material!
  updateMaterial(materialId: ID!, input: SaveMaterialInput!): Material!
  deleteMaterial(materialId: ID!): Boolean!
  updateMaterialQuantity(input: UpdateMaterialQuantityInput!): Boolean!
  updateMaterialUnitPrice(materialId: ID!, unitPrice: Float!): Material!
  createPart(input: SavePartInput!): Part!
  updatePart(partId: ID!, input: SavePartInput!): Part!
  deletePart(partId: ID!): Boolean!
  createPurchaseOrder(input: CreatePurchaseOrderInput!): PurchaseOrder!
  deletePurchaseOrder(purchaseOrderId: ID!): Boolean!
  purchaseOrderDelivered(purchaseOrderId: ID!, input: PurchaseOrderDeliveredInput!): Boolean!
  registerPurchaseOrderPayment(purchaseOrderId: ID!, input: PurchaseOrderPaymentInput!): Boolean!
  printPurchaseOrder(purchaseOrderId: ID!): String!
  createRequestForQuotation(input: CreateRequestForQuotationInput!): RequestForQuotation!
  saveRequestForQuotationAnswer(requestForQuotationId: ID!, input: SaveRequestForQuotationAnswerInput!): Boolean!
  deleteRequestForQuotation(requestForQuotationId: ID!): Boolean!
  createSupplier(input: SaveSupplierInput!): Supplier!
  updateSupplier(supplierId: ID!, input: SaveSupplierInput!): Supplier!
  deleteSupplier(supplierId: ID!): Boolean!
}

input SaveMachineInput {
  name: String!
  code: String!
  elements: [MachineElementInput!]!
}

input MachineElementInput {
  elementType: MachineElementElementType!
  elementId: ID!
  quantity: Float!
}

enum MachineElementElementType {
  MATERIAL
  PART
}

input SaveMaterialInput {
  name: String!
  code: String!
  measureUnit: MeasureUnit!
  currentQuantity: Float
  alertQuantity: Float
  suppliers: [ID!]!
}

input UpdateMaterialQuantityInput {
  materialId: ID!
  quantity: Float!
}

input SavePartInput {
  name: String!
  code: String!
  materials: [PartMaterialInput!]!
}

input PartMaterialInput {
  materialId: ID!
  quantity: Float!
}

input CreatePurchaseOrderInput {
  emitter: String!
  deliveryLocation: String
  conditions: String
  orderedAt: DateTime!
  deliveredAt: DateTime
  deliveryNote: String
  supplierId: ID!
  updateStock: Boolean!
  materials: [PurchaseOrderMaterialInput!]!
  payments: [PurchaseOrderPaymentInput!]
  requestForQuotationId: ID
}

input PurchaseOrderMaterialInput {
  materialId: ID!
  quantity: Float!
  unitPrice: Float!
}

input PurchaseOrderPaymentInput {
  method: PaymentMethod!
  amount: Float!
  paidAt: DateTime!
  notes: String
}

input PurchaseOrderDeliveredInput {
  deliveredAt: DateTime!
  deliveryNote: String
  updateStock: Boolean!
}

input CreateRequestForQuotationInput {
  orderedAt: DateTime!
  supplierId: ID!
  materials: [RequestForQuotationMaterialInput!]!
  paymentMethod: PaymentMethod!
}

input RequestForQuotationMaterialInput {
  materialId: ID!
  quantity: Float!
}

input SaveRequestForQuotationAnswerInput {
  materials: [RequestForQuotationAnswerMaterialInput!]!
}

input RequestForQuotationAnswerMaterialInput {
  materialId: ID!
  unitPrice: Float!
}

input SaveSupplierInput {
  name: String!
  address: String
  email: String
  phone: String
  contact: String
}